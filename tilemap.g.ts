// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level3 aka starting house":
            case "level3 aka starting house1":return tiles.createTilemap(hex`10001000080909090909090909090909090909070301010101010c01010101010d0a0b0403010101010101010101010101010104030101010101010101010101010101040301010101010101010101010101010403010101010101010101010101010104030101010101010101010101010101040301010101010101010101010101010403010101010101010101010101010104030101010101010101010101010101040301010101010101010101010101010403010101010101010101010101010104030101010101010101010101010101040301010101010101010101010101010403010101010101010101010101010104050202020202020e0202020202020206`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.greenOuterSouth1,sprites.dungeon.greenOuterWest0,sprites.dungeon.greenOuterEast0,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.builtin.oceanSand2,sprites.builtin.oceanSand3,sprites.dungeon.chestClosed,sprites.dungeon.stairLadder,sprites.dungeon.doorOpenNorth], TileScale.Sixteen);
            case "level 0 aka start":
            case "level1":return tiles.createTilemap(hex`1d`, img`
...22.....2222..222222222..22
.2222......222..2.......2..22
.2..............2.......2..22
.2..............2.......2..22
.2...222222.....2......22....
.2....2...2222222.....222....
.2........2...........2......
22........2........2222......
22........2......222222.22...
22...222222......2......22...
.2...2...........2......22222
.2...222.222222222......2....
.2......................2....
.2......................2....
.2......................2....
.222222222222222222222222....
`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.dungeon.darkGroundCenter,sprites.builtin.forestTiles6,sprites.castle.tileGrass1,myTiles.tile1,sprites.builtin.forestTiles24,sprites.builtin.forestTiles25,myTiles.tile2,myTiles.tile11], TileScale.Sixteen);
            case "big city aka level3":
            case "big city1":return tiles.createTilemap(hex`26001e`, img`
2.2........2222.......................
2.2........2..2........22.............
2.222222..2....2......2222............
2.2222222.2....2......2..222222222222.
2.......2.2....2.....22.............2.
.2...22.2.2....2.....2..............2.
..2..22.222....22...22..............2.
..2..22.22......2...2...............2.
..2..22.22......2...2...............2.
...2.22.2.2.....2..22...............2.
....222.2..2....2..2................2.
......2.2..2....2..2................2.
......2.2..2....2..2...............2..
......2.2..2....2..2...............2..
......2.2..2....2..2...............2..
......2.2..2....2..2...............2..
......2.2..2....2..2................2.
......2.2222....2..2................2.
......2.2222....2222................2.
......2.............................2.
.......22...........................2.
........2...........................2.
........2...........................2.
........2...........................2.
........2...........................2.
........2...........................2.
........2...........................2.
........2...........................2.
........2...........................2.
........2..........................2..
`, [myTiles.transparency16,sprites.castle.tilePath5,myTiles.tile1,sprites.castle.tileGrass2,myTiles.tile2,myTiles.tile3,sprites.builtin.oceanDepths9], TileScale.Sixteen);
            case "level":
            case "level20":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles12,sprites.builtin.forestTiles8,sprites.builtin.forestTiles24,sprites.dungeon.darkGroundCenter,sprites.dungeon.stairLarge,sprites.dungeon.greenInnerSouthEast,sprites.dungeon.greenInnerSouthWest,sprites.dungeon.stairLadder,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level2 aka cave":
            case "first overworld1":return tiles.createTilemap(hex`0c001e`, img`
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2.....
2...222....2
2..........2
2..........2
2...222....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
2...2.2....2
`, [myTiles.transparency16,sprites.builtin.forestTiles28,sprites.builtin.forestTiles9,sprites.builtin.forestTiles11,sprites.builtin.forestTiles18,sprites.builtin.forestTiles26,sprites.builtin.forestTiles24,sprites.castle.tilePath5,sprites.dungeon.darkGroundNorth,sprites.castle.tilePath8], TileScale.Sixteen);
            case "level4 aka shop":
            case "level4 aka shop1":return tiles.createTilemap(hex`10001000060b0b0b0b0b0b0b0b0b0b0b0b0b0b050701010101010101010101010101010807010101010101010101010101010108070101040404040203040404040404080701010101010101010101010101010807010101010101010101010101010108070101010101010101010101010101080701010101010101010101010101010807010101010101010101010101010108070101010101010101010101010101080701010101010101010101010101010807010101010101010101010101010108070101010101010101010101010101080701010101010101010101010101010807010101010101010101010101010108090101010101010c010101010101010a`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.greenInnerNorthWest,sprites.dungeon.greenInnerNorthEast,sprites.dungeon.greenOuterNorth0,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterWest0,sprites.dungeon.purpleOuterEast1,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterNorth0,sprites.dungeon.doorClosedSouth], TileScale.Sixteen);
            case "level7 aka church":
            case "level7 aka church1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.floorLight0,sprites.dungeon.doorClosedNorth], TileScale.Sixteen);
            case "level6 aka house":
            case "level6 aka house1":return tiles.createTilemap(hex`1000100004070707070707070707070707070703060101010101010101010c0a0b0b0b020601010101010101010101010101010206010101010101010101010101010102060101010101010101010101010101020601010101010101010101010101010206010101010101010101010101010102060101010101010101010101010101020601010101010101010101010101010206010101010101010101010101010102060101010101010101010101010101020601010101010101010101010101010206010101010101010101010101010102060101010101010101010101010101020601010101010101010101010101010205090909090909090d09090909090908`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile7,sprites.dungeon.purpleOuterEast1,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterWest0,sprites.dungeon.purpleOuterNorth0,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.chestClosed,sprites.dungeon.stairWest,sprites.dungeon.stairLadder,sprites.dungeon.doorOpenSouth], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile3":
            case "tile7":return tile7;
            case "myTile4":
            case "tile11":return tile11;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
